package Menu;

import java.awt.Color;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ingenieria
 */
public final class Principal extends javax.swing.JFrame {

    int cont1, cont2, cont3, cont4, cont5, cont6, cont7, cont8, cont9, cont10, cont11, cont12;
    int[] contC = {cont1, cont2, cont3, cont4, cont5, cont6, cont7, cont8, cont9, cont10, cont11, cont12};
    String c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12;
    String[] cTemp = {c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12};

    JLabel[] car = new JLabel[12];
    Cartas cartas = new Cartas();
    String temp1 = "";
    String temp2 = "";
    String pos1 = "";
    String pos2 = "";

    public void agregarCard() {
        cTemp[0] = cartas.getTablero()[0][0];
        cTemp[1] = cartas.getTablero()[0][1];
        cTemp[2] = cartas.getTablero()[0][2];
        cTemp[3] = cartas.getTablero()[0][3];
        cTemp[4] = cartas.getTablero()[1][0];
        cTemp[5] = cartas.getTablero()[1][1];
        cTemp[6] = cartas.getTablero()[1][2];
        cTemp[7] = cartas.getTablero()[1][3];
        cTemp[8] = cartas.getTablero()[2][0];
        cTemp[9] = cartas.getTablero()[2][1];
        cTemp[10] = cartas.getTablero()[2][2];
        cTemp[11] = cartas.getTablero()[2][3];

    }

    public void ocultar() {
        for (JLabel car1 : car) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car1, "src/cart/Back.jpg");
        }
        for (int i = 0; i < contC.length; i++) {
            contC[i] = 0;
        }
        cartas.aleatorio();
        agregarCard();
        this.mostrarAciertos.setText(Integer.toString(cartas.getAciertos()));
        this.mosVidRest.setText(Integer.toString(cartas.getVidasRestantes()));
    }

    public Principal() {
        cartas.aleatorio();
        agregarCard();
        initComponents();
        this.setLocationRelativeTo(null);
        car[0] = l1;
        car[1] = l2;
        car[2] = l3;
        car[3] = l4;
        car[4] = l5;
        car[5] = l6;
        car[6] = l7;
        car[7] = l8;
        car[8] = l9;
        car[9] = l10;
        car[10] = l11;
        car[11] = l12;
        this.mostrarAciertos.setBackground(Color.WHITE);
        this.mosVidRest.setBackground(Color.WHITE);
        this.reiniciar.setBackground(Color.GRAY);
        this.mostrar.setBackground(Color.GRAY);
        ocultar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        l11 = new javax.swing.JLabel();
        l12 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l10 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        vidas = new javax.swing.JTextField();
        mostrarAciertos = new javax.swing.JTextField();
        aciertos = new javax.swing.JTextField();
        mosVidRest = new javax.swing.JTextField();
        reiniciar = new javax.swing.JButton();
        mostrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        l2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l2MouseClicked(evt);
            }
        });

        l3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l3MouseClicked(evt);
            }
        });

        l1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l1MouseClicked(evt);
            }
        });

        l6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l6MouseClicked(evt);
            }
        });

        l7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l7MouseClicked(evt);
            }
        });

        l4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l4MouseClicked(evt);
            }
        });

        l11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l11MouseClicked(evt);
            }
        });

        l12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l12MouseClicked(evt);
            }
        });

        l9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l9MouseClicked(evt);
            }
        });

        l5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l5MouseClicked(evt);
            }
        });

        l10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l10MouseClicked(evt);
            }
        });

        l8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        l8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l8MouseClicked(evt);
            }
        });

        vidas.setEditable(false);
        vidas.setText("                                Vidas Restantes:");
        vidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vidasActionPerformed(evt);
            }
        });

        mostrarAciertos.setEditable(false);
        mostrarAciertos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarAciertosActionPerformed(evt);
            }
        });

        aciertos.setEditable(false);
        aciertos.setText("                                             Aciertos:");
        aciertos.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        aciertos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aciertosActionPerformed(evt);
            }
        });

        mosVidRest.setEditable(false);
        mosVidRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mosVidRestActionPerformed(evt);
            }
        });

        reiniciar.setText(" Reiniciar Partida");
        reiniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reiniciarMouseClicked(evt);
            }
        });
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });

        mostrar.setText("Mostrar Tablero");
        mostrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mostrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vidas)
                            .addComponent(aciertos, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mostrarAciertos)
                            .addComponent(mosVidRest)))
                    .addComponent(reiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aciertos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mostrarAciertos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vidas, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mosVidRest, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(reiniciar)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mostrar)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vidasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vidasActionPerformed

    private void mostrarAciertosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarAciertosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarAciertosActionPerformed

    private void mosVidRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mosVidRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mosVidRestActionPerformed

    private void aciertosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aciertosActionPerformed

    }//GEN-LAST:event_aciertosActionPerformed

    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reiniciarActionPerformed

    private void reiniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reiniciarMouseClicked
        ocultar();
    }//GEN-LAST:event_reiniciarMouseClicked

    private void mostrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarMouseClicked
        System.out.println("Mostrar tablero.");
        System.out.println("Salida:");
        System.out.println("");
        System.out.println("Tablero Revelado:");
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
                if (cartas.getTablero()[i][j].toCharArray().length == 3) {
                    System.out.print(" " + cartas.getTablero()[i][j]);
                } else {
                    System.out.print("  " + cartas.getTablero()[i][j]);
                }
            }
            System.out.println("");
            System.out.println("----+---+---+----");
        }
    }//GEN-LAST:event_mostrarMouseClicked
    public void ganar() {
        Icon m = new ImageIcon(getClass().getResource("/Menu/trofeo.png"));

        JOptionPane.showMessageDialog(null, "Has Ganado la partida, se reiniciara todo.", "Felicidades", JOptionPane.ERROR_MESSAGE, m);
        ocultar();
    }

    public void perder() {
        Icon m = new ImageIcon(getClass().getResource("/Menu/3.png"));
        JOptionPane.showMessageDialog(null, "Se Reiniciara la partida.", "Lo siento, has perdido.", JOptionPane.ERROR_MESSAGE, m);
        ocultar();
    }

    public void mosMsjCard() {
        char[] ca = temp2.toCharArray();
        if (ca.length == 3) {
            Icon m = new ImageIcon(getClass().getResource("/Menu/2.png"));
            JOptionPane.showMessageDialog(null, "Ha descubierto el " + ca[0] + ca[1] + " de " + Cartas.etiq(Character.toString(ca[2]))
                    + "\nLo siento ha fallado.",
                    "Lo lamento", JOptionPane.ERROR_MESSAGE, m);

        } else {
            Icon m = new ImageIcon(getClass().getResource("/Menu/2.png"));
            JOptionPane.showMessageDialog(null, "Ha descubierto el " + ca[0] + " de " + Cartas.etiq(Character.toString(ca[1]))
                    + "\nLo siento ha fallado.",
                    "Lo lamento", JOptionPane.ERROR_MESSAGE, m);
        }
    }

    public void volverANull() {
        temp1 = "";
        temp2 = "";
        pos1 = "";
        pos2 = "";
    }

    public void mosMensaje() {
        if (igual() == false) {
            mosMsjCard();

            rsscalelabel.RSScaleLabel.setScaleLabel(car[Integer.parseInt(pos1)], "src/cart/Back.jpg");
            rsscalelabel.RSScaleLabel.setScaleLabel(car[Integer.parseInt(pos2)], "src/cart/Back.jpg");

            contC[Integer.parseInt(pos1)] = 0;
            contC[Integer.parseInt(pos2)] = 0;

            volverANull();

            cartas.setVidasRestantes(cartas.getVidasRestantes() - 1);
            this.mosVidRest.setText(Integer.toString(cartas.getVidasRestantes()));

            if (this.mosVidRest.getText().equals("0")) {
                perder();
            }

        } else if (igual() == true) {
            Icon m = new ImageIcon(getClass().getResource("/Menu/1.png"));
            JOptionPane.showMessageDialog(null, "  Ha encontrado el par.", "Felicidades", JOptionPane.ERROR_MESSAGE, m);
            contC[Integer.parseInt(pos1)] = 1;
            contC[Integer.parseInt(pos2)] = 1;

            volverANull();

            cartas.setAciertos(cartas.getAciertos() + 1);
            this.mostrarAciertos.setText(Integer.toString(cartas.getAciertos()));

            if (this.mostrarAciertos.getText().equals("6")) {
                ganar();
            }
        }
    }

    public boolean igual() {
        boolean tru;
        tru = temp1.equals(temp2);
        return tru;
    }

    public void agregarPosAndCardTemp(int card, String pos) {
        if (temp1.equals("")) {
            temp1 = cTemp[card];
        } else if (temp2.equals("")) {
            temp2 = cTemp[card];
        }
        if (pos1.equals("")) {
            pos1 = pos;
        } else if (pos2.equals("")) {
            pos2 = pos;
        }

    }
    private void l1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l1MouseClicked
        if (contC[0] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[0], "src/cart/" + cTemp[0] + ".jpg");

            agregarPosAndCardTemp(0, "0");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[0] = 1;
            }
        }
    }//GEN-LAST:event_l1MouseClicked

    private void l2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l2MouseClicked
        if (contC[1] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[1], "src/cart/" + cTemp[1] + ".jpg");

            agregarPosAndCardTemp(1, "1");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[1] = 1;
            }
        }

    }//GEN-LAST:event_l2MouseClicked

    private void l3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l3MouseClicked
        if (contC[2] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[2], "src/cart/" + cTemp[2] + ".jpg");

            agregarPosAndCardTemp(2, "2");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[2] = 1;
            }

        }
    }//GEN-LAST:event_l3MouseClicked

    private void l4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l4MouseClicked
        if (contC[3] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[3], "src/cart/" + cTemp[3] + ".jpg");

            agregarPosAndCardTemp(3, "3");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[3] = 1;
            }

        }
    }//GEN-LAST:event_l4MouseClicked

    private void l5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l5MouseClicked
        if (contC[4] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[4], "src/cart/" + cTemp[4] + ".jpg");

            agregarPosAndCardTemp(4, "4");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[4] = 1;
            }

        }
    }//GEN-LAST:event_l5MouseClicked

    private void l6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l6MouseClicked
        if (contC[5] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[5], "src/cart/" + cTemp[5] + ".jpg");

            agregarPosAndCardTemp(5, "5");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[5] = 1;
            }

        }
    }//GEN-LAST:event_l6MouseClicked

    private void l7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l7MouseClicked
        if (contC[6] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[6], "src/cart/" + cTemp[6] + ".jpg");

            agregarPosAndCardTemp(6, "6");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[6] = 1;
            }

        }
    }//GEN-LAST:event_l7MouseClicked

    private void l8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l8MouseClicked
        if (contC[7] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[7], "src/cart/" + cTemp[7] + ".jpg");

            agregarPosAndCardTemp(7, "7");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[7] = 1;
            }

        }
    }//GEN-LAST:event_l8MouseClicked

    private void l9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l9MouseClicked
        if (contC[8] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[8], "src/cart/" + cTemp[8] + ".jpg");

            agregarPosAndCardTemp(8, "8");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[8] = 1;
            }

        }
    }//GEN-LAST:event_l9MouseClicked

    private void l10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l10MouseClicked
        if (contC[9] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[9], "src/cart/" + cTemp[9] + ".jpg");

            agregarPosAndCardTemp(9, "9");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[9] = 1;
            }

        }
    }//GEN-LAST:event_l10MouseClicked

    private void l11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l11MouseClicked
        if (contC[10] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[10], "src/cart/" + cTemp[10] + ".jpg");

            agregarPosAndCardTemp(10, "10");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[10] = 1;
            }

        }
    }//GEN-LAST:event_l11MouseClicked

    private void l12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l12MouseClicked
        if (contC[11] == 0) {
            rsscalelabel.RSScaleLabel.setScaleLabel(car[11], "src/cart/" + cTemp[11] + ".jpg");

            agregarPosAndCardTemp(11, "11");

            if (!temp2.equals("")) {
                mosMensaje();
            } else {
                contC[11] = 1;
            }

        }
    }//GEN-LAST:event_l12MouseClicked

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new Principal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aciertos;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l10;
    private javax.swing.JLabel l11;
    private javax.swing.JLabel l12;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel l8;
    private javax.swing.JLabel l9;
    private javax.swing.JTextField mosVidRest;
    private javax.swing.JButton mostrar;
    private javax.swing.JTextField mostrarAciertos;
    private javax.swing.JButton reiniciar;
    private javax.swing.JTextField vidas;
    // End of variables declaration//GEN-END:variables
}
